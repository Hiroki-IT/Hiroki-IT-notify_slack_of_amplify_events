version: 2.1

orbs:
  slack: circleci/slack@4.3.1

commands:
  # 失敗をSlackに通知します．
  notify_of_failure:
    steps:
      - slack/notify:
          template: basic_fail_1
          event: fail
  
  # go.sumファイルを復元します．
  restore_modules:
    steps:
      - restore_cache:
          keys:
            - go-modules-{{ checksum "go.sum" }}
            - go-modules-

  # 最新のgo.sumを保存します．
  save_modules:
    steps:
      - save_cache:
          key: go-modules-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod

jobs:
  build_and_test:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Copy env file
          command: |
            cp .env.docker.example .env.docker
      - run:
          # CircleCIコンテナに出力された環境変数をDockerコンテナで使用できるようにします．
          name: Make env file
          command: |
            echo "APP_ENV=$APP_ENV" > .env.app
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env.app
            echo "AWS_REGION=$AWS_REGION" >> .env.app
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env.app
            echo "LAMBDA_HOST=$LAMBDA_HOST" >> .env.app
            echo "SLACK_API_TOKEN=$SLACK_API_TOKEN" >> .env.app
            echo "SLACK_CHANNEL_ID=$SLACK_CHANNEL_ID" >> .env.app
      - run:
          # https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/go-image.html#go-image-other
          name: Install Lambda RIE
          command: |
            mkdir -p ~/.aws-lambda-rie
            curl -Lo ~/.aws-lambda-rie/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie
            chmod +x ~/.aws-lambda-rie/aws-lambda-rie
      - run:
          name: Validate docker-compose.yml
          command: |
            docker-compose config
      - run:
          name: Build image & Go env
          command: |
            set -xe
            docker-compose up -d
            docker-compose run --rm  notify-slack-of-amplify-events go env
      - restore_modules
      - run:
          name: Go mod download
          command: |
            docker-compose run --rm notify-slack-of-amplify-events go mod download -x
      - save_modules
      - run:
          name: Go fmt
          command: |
            docker-compose run --rm  notify-slack-of-amplify-events go fmt ./... >&2
      - run:
          name: Go vet
          command: |
            docker-compose run --rm  notify-slack-of-amplify-events go vet ./...
      - run:
          name: Go test 
          command: |
           docker-compose run --rm notify-slack-of-amplify-events go test -v -cover ./test/integration/...

workflows:

  develop:
    jobs:
      - build_and_test:
          name: build_and_test_dev
          filters:
            branches:
              only: develop

  main:
    jobs:
      - build_and_test:
          name: build_and_test_prd
          post-steps:
            - notify_of_failure
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release\/.*/
